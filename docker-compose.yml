version: '3.8'
services:
  api:
    build: .
    ports:
      - 3000:3000
    env_file:
     - .env
    environment: 
      # check for env: https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker
      - PORT=3000
      - LOG_LEVEL=debug
    labels:
      # Enable Traefik for this specific "backend" service
      - traefik.enable=true
      # Define the port inside of the Docker service to use (shd be same as env:PORT)
      - traefik.http.services.app.loadbalancer.server.port=3000
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`127.0.0.1`) && PathPrefix(`/dev`)
      - traefik.http.middlewares.api-strip-prefix.stripprefix.prefixes=/dev
      - traefik.http.routers.app-http.middlewares=api-strip-prefix@docker
  reverse-proxy:
    image: traefik
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
      - 8080:8080
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      #- --api
      - --api.insecure=true